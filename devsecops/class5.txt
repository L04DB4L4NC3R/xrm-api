    1  cd
    2  sudo apt install openjdk-11-jdk
    3  cd
    4  sudo apt install openjdk-11-jdk
    5  sudo apt install openjdk-11-jre
    6  wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
    7  sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
    8  sudo apt update
    9  sudo apt install jenkins
   10  sudo systemctl enable --now jenkins
   11  sudo cat /var/lib/jenkins/secrets/initialAdminPassword
   12  curl ifconfig.me
   13  clear
   14  ssh-keygen -t rsa
   15  ls
   16  cd ./ssh
   17  ls -l
   18  clear
   19  ls -a
   20  cd .ssh
   21  ls
   22  cat id_rsa.pub
   23  cd ..
   24  sudo tmux detach
   25  git clone git@github.com:vallaram/vulnado.git
   26  git clone git@github.com:vallaram/xrm-api.git
   27  clear
   28  ls
   29  su jenkins
   30  cd
   31  cd xrm-api/
   32  vim Owasp.Jenkinsfile 
   33  git status
   34  git add .
   35  git commit -m "Owasp depcheck jenkinsfile"
   36  git config --global user.email "vallar4327@gmail.com"
   37  git config --global user.name "vallaram"
   38  git commit -m "Owasp depcheck jenkinsfile"
   39  git push origin master
   40  clear
   41  ls
   42  cat Jenkinsfile 
   43  cp Jenkinsfile Nodejs.Jenkinsfile
   44  vim Nodejs.Jenkinsfile 
   45  cat Nodejs.Jenkinsfile 
   46  cd
   47  cd xrm-api/
   48  ls
   49  git status
   50  cat Nodejs.Jenkinsfile 
   51  git add .
   52  git commit -m "Nodejsscan pipeline"
   53  git push origin master
   54  clear
   55  cd /var/lib/jenkins/reports
   56  ls
   57  cat owasp.json
   58  clear
   59  cd
   60  ls
   61  cd xrm-api/
   62  ls
   63  cp Jenkinsfile Audit.Jenkinsfile
   64  vim Audit.Jenkinsfile
   65  cd
   66  cd xrm-api/
   67  sudo npm i -g eslint
   68  cd 
   69  cd xrm-api/
   70  ls
   71  eslint --init
   72  cat Audit.Jenkinsfile 
   73  git status
   74  git add .
   75  git commit -m "audit pipeline"
   76  git push origin master
   77  cd /var/lib/jenkins/reports/
   78  ls
   79  vim nodejsscan_report.json 
   80  cd
   81  cd /var/lib/jenkins/reports/
   82  ls
   83  vim audit_report.json 
   84  ls
   85  cd
   86  cd xrm-api/
   87  ls
   88  cd
   89  cd xrm-api/
   90  ls
   91  mv class* devsecops/
   92  ls
   93  git status
   94  cd devsecops/
   95  vim class4_history.txt 
   96  history
   97  history >> class4_history.txt 
   98  cd
   99  cd xrm-api/devsecops/
  100  history >> class4_history.txt 
  101  vim class4_history.txt 
  102  curl -sSL get.docker.com
  103  curl -sSL get.docker.com | sh
  104  sudo docker --version
  105  sudo usermod -aG docker ram
  106  docker --version
  107  cd
  108  docker run -d -p 9000:9000 -p 9092:9092 --name sonarqube sonarqube
  109  docker ps
  110  sudo apt-get install maven
  111  ls
  112  cd
  113  ls
  114  cd xrm-api/
  115  clear
  116  ls
  117  cat Jenkinsfile
  118  clear
  119  vi Owasp.Jenkinsfile
  120  su jenkins
  121  su -
  122  cd .ssh
  123  sudo cd .ssh
  124  cd
  125  cd .ssh
  126  ls
  127  cat id_rsa.pub
  128  cd ..
  129  tmux attach -t testclass4
  130  sudo tmux attach -t testclass4
  131  cd
  132  ls
  133  cd vulnado/
  134  git pull origin master
  135  ls
  136  mvn sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  137  ls
  138  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  139  ls
  140  vim pom.xml 
  141  sudo apt install maven
  142  vim pom.xml 
  143  mvn --version
  144  mvn clean install sonar:sonar
  145  echo $?
  146  mvn -fn clean install sonar:sonar
  147  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  148  ls
  149  cd src
  150  ls
  151  cd main
  152  ls
  153  cd java
  154  ls
  155  cd com
  156  ls
  157  cd scalesec/
  158  ls
  159  cd vulnado/
  160  ls
  161  vim Cowsay.java
  162  cd 
  163  cd vulnado/
  164  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  165  mvn -fn clean install sonar:sonar
  166  echo $?
  167  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  168  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=
  169  cd ..
  170  git clone git@github.com:vallaram/dvpwa.git
  171  cd dvpwa/
  172  clear
  173  ls
  174  vim requirements.txt 
  175  cd
  176  mkdir sample
  177  cd sample/
  178  npm init
  179  ls
  180  cd
  181  cd dvpwa/
  182  ls
  183  pip3 install pipreqs
  184  mv requirements.txt requirements.txt.bak
  185  ls
  186  pipreqs .
  187  vim ~/.bashrc
  188  source ~/.bashrc
  189  pipreqs .
  190  vim requirements.txt
  191  rm requirements.txt
  192  mv requirements.txt.bak requirements.txt
  193  ls
  194  history > ../class5.txt
    1  cd
    2  sudo apt install openjdk-11-jdk
    3  cd
    4  sudo apt install openjdk-11-jdk
    5  sudo apt install openjdk-11-jre
    6  wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
    7  sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
    8  sudo apt update
    9  sudo apt install jenkins
   10  sudo systemctl enable --now jenkins
   11  sudo cat /var/lib/jenkins/secrets/initialAdminPassword
   12  curl ifconfig.me
   13  clear
   14  ssh-keygen -t rsa
   15  ls
   16  cd ./ssh
   17  ls -l
   18  clear
   19  ls -a
   20  cd .ssh
   21  ls
   22  cat id_rsa.pub
   23  cd ..
   24  sudo tmux detach
   25  git clone git@github.com:vallaram/vulnado.git
   26  git clone git@github.com:vallaram/xrm-api.git
   27  clear
   28  ls
   29  su jenkins
   30  cd
   31  cd xrm-api/
   32  vim Owasp.Jenkinsfile 
   33  git status
   34  git add .
   35  git commit -m "Owasp depcheck jenkinsfile"
   36  git config --global user.email "vallar4327@gmail.com"
   37  git config --global user.name "vallaram"
   38  git commit -m "Owasp depcheck jenkinsfile"
   39  git push origin master
   40  clear
   41  ls
   42  cat Jenkinsfile 
   43  cp Jenkinsfile Nodejs.Jenkinsfile
   44  vim Nodejs.Jenkinsfile 
   45  cat Nodejs.Jenkinsfile 
   46  cd
   47  cd xrm-api/
   48  ls
   49  git status
   50  cat Nodejs.Jenkinsfile 
   51  git add .
   52  git commit -m "Nodejsscan pipeline"
   53  git push origin master
   54  clear
   55  cd /var/lib/jenkins/reports
   56  ls
   57  cat owasp.json
   58  clear
   59  cd
   60  ls
   61  cd xrm-api/
   62  ls
   63  cp Jenkinsfile Audit.Jenkinsfile
   64  vim Audit.Jenkinsfile
   65  cd
   66  cd xrm-api/
   67  sudo npm i -g eslint
   68  cd 
   69  cd xrm-api/
   70  ls
   71  eslint --init
   72  cat Audit.Jenkinsfile 
   73  git status
   74  git add .
   75  git commit -m "audit pipeline"
   76  git push origin master
   77  cd /var/lib/jenkins/reports/
   78  ls
   79  vim nodejsscan_report.json 
   80  cd
   81  cd /var/lib/jenkins/reports/
   82  ls
   83  vim audit_report.json 
   84  ls
   85  cd
   86  cd xrm-api/
   87  ls
   88  cd
   89  cd xrm-api/
   90  ls
   91  mv class* devsecops/
   92  ls
   93  git status
   94  cd devsecops/
   95  vim class4_history.txt 
   96  history
   97  history >> class4_history.txt 
   98  cd
   99  cd xrm-api/devsecops/
  100  history >> class4_history.txt 
  101  vim class4_history.txt 
  102  curl -sSL get.docker.com
  103  curl -sSL get.docker.com | sh
  104  sudo docker --version
  105  sudo usermod -aG docker ram
  106  docker --version
  107  cd
  108  docker run -d -p 9000:9000 -p 9092:9092 --name sonarqube sonarqube
  109  docker ps
  110  sudo apt-get install maven
  111  ls
  112  cd
  113  ls
  114  cd xrm-api/
  115  clear
  116  ls
  117  cat Jenkinsfile
  118  clear
  119  vi Owasp.Jenkinsfile
  120  su jenkins
  121  su -
  122  cd .ssh
  123  sudo cd .ssh
  124  cd
  125  cd .ssh
  126  ls
  127  cat id_rsa.pub
  128  cd ..
  129  tmux attach -t testclass4
  130  sudo tmux attach -t testclass4
  131  cd
  132  ls
  133  cd vulnado/
  134  git pull origin master
  135  ls
  136  mvn sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  137  ls
  138  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  139  ls
  140  vim pom.xml 
  141  sudo apt install maven
  142  vim pom.xml 
  143  mvn --version
  144  mvn clean install sonar:sonar
  145  echo $?
  146  mvn -fn clean install sonar:sonar
  147  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  148  ls
  149  cd src
  150  ls
  151  cd main
  152  ls
  153  cd java
  154  ls
  155  cd com
  156  ls
  157  cd scalesec/
  158  ls
  159  cd vulnado/
  160  ls
  161  vim Cowsay.java
  162  cd 
  163  cd vulnado/
  164  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  165  mvn -fn clean install sonar:sonar
  166  echo $?
  167  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=ea36fcea4abf11f4a8ce92fb786f348e70e84958
  168  ./mvnw sonar:sonar   -Dsonar.projectKey=project-vulnado   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=
  169  cd ..
  170  git clone git@github.com:vallaram/dvpwa.git
  171  cd dvpwa/
  172  clear
  173  ls
  174  vim requirements.txt 
  175  cd
  176  mkdir sample
  177  cd sample/
  178  npm init
  179  ls
  180  cd
  181  cd dvpwa/
  182  ls
  183  pip3 install pipreqs
  184  mv requirements.txt requirements.txt.bak
  185  ls
  186  pipreqs .
  187  vim ~/.bashrc
  188  source ~/.bashrc
  189  pipreqs .
  190  vim requirements.txt
  191  rm requirements.txt
  192  mv requirements.txt.bak requirements.txt
  193  ls
  194  history > ../class5.txt
  195  ls
  196  dpkg --print-architecture
  197  cd ..
  198  wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip
  199  ls
  200  unzip sonar-scanner-cli-4.5.0.2216-linux.zip
  201  clear
  202  ls
  203  cd sonar-scanner-4.5.0.2216-linux/
  204  ls
  205  cd bin
  206  ls
  207  ./sonar-scanner --version
  208  cd
  209  cd dvpwa/
  210  ls
  211  ~/sonar-scanner-4.5.0.2216-linux/bin/sonar-scanner  sonar-scanner   -Dsonar.projectKey=project-dvpwa   -Dsonar.sources=.   -Dsonar.host.url=http://178.62.36.5:9000 \
  212  ~/sonar-scanner-4.5.0.2216-linux/bin/sonar-scanner -Dsonar.projectKey=project-dvpwa   -Dsonar.sources=.   -Dsonar.host.url=http://178.62.36.5:9000 \
  213  ~/sonar-scanner-4.5.0.2216-linux/bin/sonar-scanner -Dsonar.projectKey=project-dvpwa   -Dsonar.sources=.   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=6e118d0a1c7005a175671a91267eb720eeac7aa2
  214  clear
  215  cd ..
  216  ls
  217  git clone git@github.com:vallaram/dvna.git
  218  cd dvna
  219  ../scanner-4.5.0.2216-linux/bin/sonar-scanner  -Dsonar.projectKey=test-dvnanodejs   -Dsonar.sources=.   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=45b63631fe1181a4abc6a36340015e799c9d81b2
  220  ../scanner-4.5.0.2216-linux/bin/sonar-scanner.sh  -Dsonar.projectKey=test-dvnanodejs   -Dsonar.sources=.   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=45b63631fe1181a4abc6a36340015e799c9d81b2
  221  cd ../scanner-4.5.0.2216-linux/bin/
  222  cd ../scanner-4.5.0.2216-linux
  223  ls ..
  224  ../sonar-scanner-4.5.0.2216-linux/bin/sonar-scanner  -Dsonar.projectKey=test-dvnanodejs   -Dsonar.sources=.   -Dsonar.host.url=http://178.62.36.5:9000   -Dsonar.login=45b63631fe1181a4abc6a36340015e799c9d81b2
  225  clear
  226  cd ../vulnado/
  227  ls
  228  vim Jenkinsfile
  229  git status
  230  ls
  231  vim src/main/java/com/scalesec/vulnado/Cowsay.java
  232  git status
  233  vim pom.xml 
  234  rm src/main/java/com/scalesec/vulnado/:
  235  git add .
  236  git commit -m "sonar scanner for vulnado"
  237  git push origin master
  238  sudo systemctl status jenkins
  239  sudo systemctl restart jenkins
  240  htop
  241  history >> ../class5.txt 
    1  useradd -m ram
    2  passwd
    3  su - ram
    4  exit
    5  ssh root@178.62.36.5
    6  clear
    7  apt-get update
    8  apt-get upgrade
    9  clear
   10  useradd -m testuser
   11  passwd testuser
   12  su - testuser
   13  su jenkins
   14  ls
   15  chown jenkins dependency-check-5.2.4-release.zip 
   16  mv dependency-check-5.2.4-release.zip /var/lib/jenkins/
   17  su jenkins
   18  sudo apt install unzip
   19  su jenkins
   20  su ram
   21  apt install python3-pip
   22  pip3 install nodejsscan
   23  history > class4_history.txt
   24  ls
   25  su jenkins
   26  su ram
   27  su jenkins
   28  npm i -g retire
   29  pwd
   30  su jenkins
   31  clear
   32  su ram
   33  su jenkins
   34  su ram
   35  ls
   36  history >> class4_history.txt 
   37  mv class4_history.txt /home/ram/xrm-api/
   38  su ram
   39  sudo chowm /home/ram/xrm-api/devsecops/class4_history.txt ram
   40  sudo chown ram /home/ram/xrm-api/devsecops/class4_history.txt
   41  su ram
   42  clear
   43  getent passwd | grep ram
   44  su - ram
   45  clear
   46  useradd -m devops
   47  passwd
   48  passwd devops
   49  su - devops
   50  vi sudo
   51  visudo
   52  usermod -aG sudo devops
   53  su - devops
   54  clear
   55  tmux new -s testclass4
   56  ls -a
   57  su ram
   58  ls
   59  passwd
   60  tmux list-session
   61  tmux a -t testclass4
   62  htop
   63  sudo poweroff
   64  useradd -m ram
   65  passwd ram
   66  su ram
   67  visudo
   68  usermd -aG sudo ram
   69  usermod -aG sudo ram
   70  su ram
   71  su jenkins
   72  curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
   73  sudo apt-get install -y nodejs
   74  clear
   75  su jenkins
   76  su ram
   77  ls
   78  clear
   79  cd /var/lib/jenkins
   80  ls
   81  clear
   82  cd reports
   83  ls
   84  cd ..
   85  ls
   86  cd
   87  clear
   88  ls
   89  cd snap
   90  ls
   91  cd 
   92  sudo poweroff
   93  ls
   94  git status
   95  sudo apt update
   96  sudo apt upgrade
   97  htop
   98  clear
   99  ls
  100  cd /var/lib/jenkins/reports
  101  ls
  102  cd ../workspaces
  103  cd ../workspace
  104  ls
  105  cd
  106  clear
  107  sudo reboot
  108  docker ps -a
  109  docker rm -f `docker ps -aq`
  110  docker ps -aq
  111  docker run -d -p 9000:9000 -p 9092:9092 --name sonarqube sonarqube
  112  ls
  113  htop
  114  ls
  115  su ram
  116  history >> /home/ram/class5.txt 
